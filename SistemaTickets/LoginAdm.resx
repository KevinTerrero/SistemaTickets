<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>